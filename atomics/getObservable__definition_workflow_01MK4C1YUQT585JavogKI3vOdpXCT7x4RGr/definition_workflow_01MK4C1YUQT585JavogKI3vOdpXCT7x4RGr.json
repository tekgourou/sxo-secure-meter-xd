{
  "workflow": {
    "unique_name": "definition_workflow_01MK4C1YUQT585JavogKI3vOdpXCT7x4RGr",
    "name": "SMXD - Get Observable",
    "title": "SMXD - Get Observable",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.date",
        "properties": {
          "value": "0001-01-01T00:00:00+00:00",
          "scope": "output",
          "name": "Last modified",
          "type": "datatype.date",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01MW5A1GL3QZ735fCH4jdYSVvKbJFqb7iNk",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.integer",
        "properties": {
          "value": 0,
          "scope": "output",
          "name": "Risk score",
          "type": "datatype.integer",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01MW4DHU5ICJA1YbrmVKYAHVRZXONDYpE77",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "observable_value",
          "type": "datatype.string",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01MK4C1YMIME32GlYNjwUM53prpDtzUSldL",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "observable_type",
          "type": "datatype.string",
          "description": "Please enter the observable type based on the CTIM specs",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01MW184IP7JOD5NpWOQufPOixEAUlXM4rDD",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "Secure MeterXD",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "description": "Retrieve an observable based on its value and type from the Global SMXD Observable table\n\nTarget: N/A\n\nAccount Key: N/A\n\nSteps:\n[] Search the observable from the Global SMXD observable table\n[]\u003e If not found, complete with failure\n[] Set the observable Risk score and Last Modified values found to the output variables\n\nMore details are available at https://github.com/kcdubois/sxo-secure-meter-xd\n\n",
      "display_name": "SMXD - Get Observable",
      "runtime_user": {
        "override_target_runtime_user": false,
        "specify_on_workflow_start": false,
        "target_default": true
      },
      "target": {
        "execute_on_target_group": false,
        "execute_on_workflow_target": false,
        "no_target": true,
        "specify_on_workflow_start": false
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01MK4C2OCYN5A0sbutsxeHpoVbaMp0FDaH2",
        "name": "Select from Table",
        "title": "Select from Table",
        "type": "core.selectfromtable",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "columns": [
            {
              "column_name": "last_modified",
              "column_type": "date"
            },
            {
              "column_name": "observable",
              "column_type": "string"
            },
            {
              "column_name": "score",
              "column_type": "integer"
            },
            {
              "column_name": "type",
              "column_type": "string"
            }
          ],
          "continue_on_failure": false,
          "display_name": "Select from Table",
          "input_table": "$global.variable_01MF4XQ8JH2PL6TZ9JERt7MTNTpzV3GfgD3.global.variable_01MF4XQ8JH2PL6TZ9JERt7MTNTpzV3GfgD3$",
          "number_of_rows": {
            "all_rows": true,
            "at_most": false
          },
          "persist_output": false,
          "skip_execution": false,
          "sorting": {
            "no_sort": true,
            "sort_by": false
          },
          "where_clause": "observable == '$workflow.definition_workflow_01MK4C1YUQT585JavogKI3vOdpXCT7x4RGr.input.variable_workflow_01MK4C1YMIME32GlYNjwUM53prpDtzUSldL$' AND type == '$workflow.definition_workflow_01MK4C1YUQT585JavogKI3vOdpXCT7x4RGr.input.variable_workflow_01MW184IP7JOD5NpWOQufPOixEAUlXM4rDD$'"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01MK4E1PYMPNY0C09QQxzsEfUO54NXGkMja",
        "name": "Condition Block",
        "title": "Observable Found?",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Observable Found?",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01MK4E21ELFE27L4GKRac4ri4cNHr1CUBax",
            "name": "Condition Branch",
            "title": "No",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01MK4C2OCYN5A0sbutsxeHpoVbaMp0FDaH2.output.row_count$",
                "operator": "eq",
                "right_operand": 0
              },
              "continue_on_failure": false,
              "display_name": "No",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01MK4GWULQ5IC07CTA6wd7RKtg0TzqQ0cuA",
                "name": "Completed",
                "title": "Completed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Completed",
                  "result_message": "Observable not found",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_01MK4HAOY2TCX4vOCE28DIZ4sEpTBp27DMJ",
        "name": "Set Variables",
        "title": "Set output",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Set output",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_01MK4C1YUQT585JavogKI3vOdpXCT7x4RGr.output.variable_workflow_01MW4DHU5ICJA1YbrmVKYAHVRZXONDYpE77$",
              "variable_value_new": "$activity.definition_activity_01MK4C2OCYN5A0sbutsxeHpoVbaMp0FDaH2.output.output_table[0].score$"
            },
            {
              "variable_to_update": "$workflow.definition_workflow_01MK4C1YUQT585JavogKI3vOdpXCT7x4RGr.output.variable_workflow_01MW5A1GL3QZ735fCH4jdYSVvKbJFqb7iNk$",
              "variable_value_new": "$activity.definition_activity_01MK4C2OCYN5A0sbutsxeHpoVbaMp0FDaH2.output.output_table[0].last_modified$"
            }
          ]
        },
        "object_type": "definition_activity"
      }
    ],
    "categories": [
      "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r"
    ]
  },
  "categories": {
    "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r": {
      "unique_name": "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r",
      "name": "SecureX",
      "title": "SecureX",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  },
  "variables": {
    "variable_01MF4XQ8JH2PL6TZ9JERt7MTNTpzV3GfgD3": {
      "unique_name": "variable_01MF4XQ8JH2PL6TZ9JERt7MTNTpzV3GfgD3",
      "schema_id": "tabletype_01MF4WGQQ9KTZ6pHPdsUJe0wTHBJ7IpSxil",
      "properties": {
        "value": [
          {
            "column_data": {
              "last_modified": "2021-03-09T21:36:31.461005866Z",
              "observable": "10.0.0.1",
              "related": "",
              "score": 10,
              "type": "ip"
            }
          },
          {
            "column_data": {
              "last_modified": "2021-03-09T06:00:08.614584805Z",
              "observable": "172.16.47.36",
              "score": 4,
              "type": "ip"
            }
          },
          {
            "column_data": {
              "last_modified": "2021-03-10T06:00:10.682964339Z",
              "observable": "172.16.46.18",
              "score": 4,
              "type": "ip"
            }
          }
        ],
        "scope": "global",
        "name": "Secure_Meter_XD",
        "type": "datatype.table",
        "is_required": false,
        "is_invisible": false
      },
      "object_type": "variable"
    }
  },
  "table_types": {
    "tabletype_01MF4WGQQ9KTZ6pHPdsUJe0wTHBJ7IpSxil": {
      "unique_name": "tabletype_01MF4WGQQ9KTZ6pHPdsUJe0wTHBJ7IpSxil",
      "data_type": "datatype.tabletype",
      "display_name": "Secure_Meter_XD_Observables",
      "description": "Table used to contain observables tracked by Secure Meter XD",
      "columns": [
        {
          "name": "last_modified",
          "title": "last_modified",
          "type": "date"
        },
        {
          "is_required": true,
          "name": "observable",
          "title": "observable",
          "type": "string"
        },
        {
          "name": "related",
          "title": "related",
          "type": "string"
        },
        {
          "is_required": true,
          "maximum": 10,
          "minimum": 1,
          "name": "score",
          "title": "score",
          "type": "integer"
        },
        {
          "is_required": true,
          "name": "type",
          "title": "type",
          "type": "string"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    }
  }
}